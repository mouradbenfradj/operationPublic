# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel


jobs:
  symfony:
    name: Symfony 5.4 (PHP ${{ matrix.php-versions }})
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4']
    steps:
      - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
        with:
          php-version: '7.4'
      - uses: actions/checkout@v3
      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Cache node_modules
        uses: actions/cache@v3
        id: yarn-cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-cache-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-cache-node-modules-

      - name: Yarn install
        #if: steps.yarn-cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install
      - name: assets:install
        #if: steps.yarn-cache-node-modules.outputs.cache-hit != 'true'
        run: php bin/console assets:install --symlink

      - name: Yarn build
        run: yarn run encore production
        #run: yarn encore dev

      
      # Symfony
      - name: Check the Symfony console
        run: |
          php bin/console -V
          php bin/console about
      # Tests
      #- name: Run unit and functional tests
      #  run: |
      #    php bin/phpunit --stop-on-failure

      - name:  Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.OVH_HOSTING_USER }}
          password: ${{ secrets.OVH_HOSTING_PASSWORD }}
          #server-dir: ${{ secrets.FTP_REMOTE_FOLDER }}
          server-dir: ./www/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.bfg-report*/**
            **/var/cache/**

      - name: Delete TmpFolder
        uses: StephanThierry/ftp-delete-action@v2.1
        with:
          host: ${{ secrets.FTP_HOST }}
          user: ${{ secrets.OVH_HOSTING_USER }}
          password: ${{ secrets.OVH_HOSTING_PASSWORD }}
          remoteDirectories: "./var/cache/prod"
          workingDir: "./www/"
          ignoreSSL: "1"